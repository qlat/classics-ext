% Copyright (C) 2021 Gabriel Siemoneit
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either
% version 1.3 of this license or (at your option) any later
% version.  The latest version of this license is in
%
%   http://www.latex-project.org/lppl.txt
%
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `author-maintained'.
%
% This work consists of the file classics-ext.sty which is
% derived from classics.sty contained in the classics package.
%
% The classics package (version 0.1a) is
% Copyright (C) 2020 Eduardo C. Lourenço de Lima.

\RequirePackage{expl3}
\RequirePackage{xparse}
\ProvidesExplPackage {classics-ext} {2021/05/01} {0.1} {Cite classic works and build an index locorum citatorum}

\tl_new:N  \g_classics_style_range_separator_tl
\tl_new:N  \g_classics_style_separator_tl

\tl_set:Nn \g_classics_style_range_separator_tl {--}
\tl_set:Nn \g_classics_style_separator_tl   {|}

\bool_new:N \g__classics_plural_prefix_bool

\cs_generate_variant:Nn \seq_set_split:Nnn     {cVn}

\tl_new:N \g_classics_ext_index_name_tl

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% TODO Make global

% Get index separators for later use
\tl_new:c {l_classics_ext_locus_tmp_tl}  

% Final index entry
\tl_new:c {l_classics_ext_idx_entry_tl}

\tl_new:c {l_classics_ext_locus_sorter_tl}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% The following code provided by: Enrico Gregorio
% (https://tex.stackexchange.com/a/412238)
\NewExpandableDocumentCommand{\padinteger}{mm}
{
	\int_compare:nNnTF { #2 } < { 0 }
	{
		- \kuttens_padinteger:nn { #1 } { -#2 }
	}
	{
		\kuttens_padinteger:nn { #1 } { #2 }
	}
}

\cs_new:Nn \kuttens_padinteger:nn
{
	\prg_replicate:nn { #1 - \tl_count:f { \int_to_arabic:n { #2 } } } { 0 }
	\int_to_arabic:n { #2 }
}
\cs_generate_variant:Nn \tl_count:n { f }
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% The following code provided by: Henri Menke
% (https://tex.stackexchange.com/a/427559)
\prg_new_protected_conditional:Npnn \if_is_int:n #1 { T, F, TF }
{
	\regex_match:nnTF { ^[\+\-]?[\d]+$ } {#1} % $
	{ \prg_return_true: }
	{ \prg_return_false: }
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% <page/section/...>
%\cs_new:Npn \classics_ext_pad_locus:n #1
\NewExpandableDocumentCommand{\classics_ext_pad_locus}{m}
{
	\tl_if_blank:nF {#1} 
	{
		%\tl_put_right:cn {l_classics_ext_locus_sorter_tl} {\padinteger{4}{##4}}
		\if_is_int:nTF {#1} {\padinteger{4}{#1}} {#1}
	}
}


% * [<range separator>] {<basename>} {<code>}
\NewDocumentCommand \newclassic {somm}
{
    \seq_new:c      {g_classics_#3_style_seq}
    \tl_new:c       {g_classics_#3_range_separator_tl}
	
	% Author abbreviation for index entry, e.g. "Diod."
	\tl_new:c {l_classics_ext_#3_abbr_tl}
  
	% Author name for index entry, e.g. "Alberti, Leon Battista"
	\tl_new:c {l_classics_ext_#3_full_name_tl}
	
	% Locus separators
	\prop_new:c {l_classics_ext_#3_locus_seps_prop}
	
	% Full titles
	\prop_new:c {l_classics_ext_full_#3_titles_prop}
  

    \IfValueTF {#2}
    {\tl_set:cn      {g_classics_#3_range_separator_tl} {#2}}
    {\tl_set:cn      {g_classics_#3_range_separator_tl} {\tl_use:N \g_classics_style_range_separator_tl}}

    \classics_style_set:nn {#3} {#4}
	
	
	% {<classic abbreviation>}
	% Save optional abbreviation for classic, e.g. "Diod."
	\exp_after:wN \NewDocumentCommand \cs:w #3Abbr\cs_end: { m }
	{
		\tl_set:cn {l_classics_ext_#3_abbr_tl} {##1}
	}

	% {<classic full name>}
	% Save optional name for <classic> for index entry, e.g. "Alberti, Leon Battista"
	\exp_after:wN \NewDocumentCommand \cs:w #3FullName\cs_end: { m }
	{
		\tl_set:cn {l_classics_ext_#3_full_name_tl} {##1}
	}
	
	% {<work abbr.>} {<work full title}
	% Optionally full title for work abbreviation
	\exp_after:wN \NewDocumentCommand \cs:w #3FullTitle\cs_end: { mm }
	{
		\prop_put:cnn {l_classics_ext_full_#3_titles_prop} {##1} {##2}
	}
	
	% [<work abbr.>] {<separators>} {…} {…} {…} {…}
	\exp_after:wN \NewDocumentCommand \cs:w #3IndexSeparators\cs_end: { oO{}O{}O{}O{}O{} }
	{
		\tl_if_blank:nTF {##1}
		{
            % No work abbr. provided => use <classic>
            \prop_put:cnn {l_classics_ext_#3_locus_seps_prop} {#3} {##2##3##4##5##6}
        }
		{
            \prop_put:cnn {l_classics_ext_#3_locus_seps_prop} {##1} {##2##3##4##5##6}
        }
	}


    % * (<last page>) [<title>] {<page>} [<section>]
    \exp_after:wN \NewDocumentCommand \cs:w #3\cs_end: { sd()omO{}O{}O{}O{}O{} }
    {
		% Clear global variables
		\tl_clear:N \l_classics_ext_idx_entry_tl
		\tl_clear:N \l_classics_ext_locus_sorter_tl
	
		% Create locus sorter
        \tl_put_right:cn {l_classics_ext_locus_sorter_tl} {\classics_ext_pad_locus{##4}}
		\tl_put_right:cn {l_classics_ext_locus_sorter_tl} {\classics_ext_pad_locus{##5}}
		\tl_put_right:cn {l_classics_ext_locus_sorter_tl} {\classics_ext_pad_locus{##6}}
		\tl_put_right:cn {l_classics_ext_locus_sorter_tl} {\classics_ext_pad_locus{##7}}
		\tl_put_right:cn {l_classics_ext_locus_sorter_tl} {\classics_ext_pad_locus{##8}}
		\tl_put_right:cn {l_classics_ext_locus_sorter_tl} {\classics_ext_pad_locus{##9}}
        
		
		% Add <classic> or <classic_full_name>
		\tl_if_empty:cTF {l_classics_ext_#3_full_name_tl}
		{
			\tl_put_right:cn {l_classics_ext_idx_entry_tl} {#3}
		}
		{
			\tl_put_right:cn {l_classics_ext_idx_entry_tl} {\tl_use:c {l_classics_ext_#3_full_name_tl}}
		}
		
		% First sublevel
		\tl_put_right:cn {l_classics_ext_idx_entry_tl} {!}
	
        
        % Check if optional title is given
        \IfValueTF  {##3}
        {
			% Add <work>
			\tl_put_right:cn {l_classics_ext_idx_entry_tl} {\lowercase\expandafter{##3}}
			
			% Check if full title (optional) is given
			\prop_if_in:cnTF {l_classics_ext_full_#3_titles_prop} {##3}
			{
				% Add ~(<work full title)!
				\tl_put_right:cn {l_classics_ext_idx_entry_tl} {~(}
				\tl_put_right:cn {l_classics_ext_idx_entry_tl} {\prop_item:cn {l_classics_ext_full_#3_titles_prop} {##3}}
				\tl_put_right:cn {l_classics_ext_idx_entry_tl} {)!}
			}
			{}

			% Add <locus_sorter>@<work>~<locus>
			\tl_put_right:cx {l_classics_ext_idx_entry_tl} \l_classics_ext_locus_sorter_tl
			
			\tl_put_right:cn {l_classics_ext_idx_entry_tl} {@}
			\tl_put_right:cn {l_classics_ext_idx_entry_tl} {{\itshape ##3}}
            %\tl_put_right:cx {l_classics_ext_idx_entry_tl} {\classics_title_format:n {##3}}
			\tl_put_right:cn {l_classics_ext_idx_entry_tl} {~}
			
			% Typeset title if it does not start with "!"
			\str_if_eq:onTF { \@car ##3 \@nil } {!}
			{}
			{
				\group_begin:
				\frenchspacing \classics_title_format:n {##3}
				\tl_if_blank:nTF {##4} {}{~}
				\group_end:
			}
        }
		{
			% No title given			
			
			% <classic_abbr> given?
			\tl_if_empty:cTF {l_classics_ext_#3_abbr_tl}
			{
				% No <classic> abbreviation given
				% Add <locus_sorter>@
				\tl_put_right:cn {l_classics_ext_idx_entry_tl} {\l_classics_ext_locus_sorter_tl}
				\tl_put_right:cn {l_classics_ext_idx_entry_tl} {@}
			}
			{
				% Add <classic_abbr><locus_sorter>@<classic_abbr>~
				\tl_put_right:cn {l_classics_ext_idx_entry_tl} {\tl_use:c {l_classics_ext_#3_abbr_tl}}
				\tl_put_right:cn {l_classics_ext_idx_entry_tl} {\l_classics_ext_locus_sorter_tl}
				\tl_put_right:cn {l_classics_ext_idx_entry_tl} {@}
				\tl_put_right:cn {l_classics_ext_idx_entry_tl} {\tl_use:c {l_classics_ext_#3_abbr_tl}}
				\tl_put_right:cn {l_classics_ext_idx_entry_tl} {~}
			}
		}
		
		% Get locus separators by <work>
		\tl_set:cx {l_classics_ext_locus_tmp_tl} {\prop_item:cn {l_classics_ext_#3_locus_seps_prop} {##3}}
        
		% Add <locus> by combining ranges and separators
		\tl_put_right:cn {l_classics_ext_idx_entry_tl} {##4}
		\IfValueTF  {##4} {\tl_put_right:cn {l_classics_ext_idx_entry_tl} {\tl_item:cn {l_classics_ext_locus_tmp_tl}{1}}}{}
        
		\tl_put_right:cn {l_classics_ext_idx_entry_tl} {##5}
		\IfValueTF  {##5} {\tl_put_right:cn {l_classics_ext_idx_entry_tl} {\tl_item:cn {l_classics_ext_locus_tmp_tl}{2}}}{}
        
		\tl_put_right:cn {l_classics_ext_idx_entry_tl} {##6}
		\IfValueTF  {##6} {\tl_put_right:cn {l_classics_ext_idx_entry_tl} {\tl_item:cn {l_classics_ext_locus_tmp_tl}{3}}}{}
        
		\tl_put_right:cn {l_classics_ext_idx_entry_tl} {##7}
		\IfValueTF  {##7} {\tl_put_right:cn {l_classics_ext_idx_entry_tl} {\tl_item:cn {l_classics_ext_locus_tmp_tl}{4}}}{}
        
		\tl_put_right:cn {l_classics_ext_idx_entry_tl} {##8}
		\IfValueTF  {##8} {\tl_put_right:cn {l_classics_ext_idx_entry_tl} {\tl_item:cn {l_classics_ext_locus_tmp_tl}{5}}}{}
        
		\tl_put_right:cn {l_classics_ext_idx_entry_tl} {##9}
		\IfValueTF  {##9} {\tl_put_right:cn {l_classics_ext_idx_entry_tl} {\tl_item:cn {l_classics_ext_locus_tmp_tl}{6}}}{}
		

        %Range: Typeset page when last page is provided only if they differ
        \bool_if:nTF { (! #1) && \str_if_eq_p:ee{##2}{##4} }
        {
            \classics_style_map:nnnnnnn{#3}  {} {##5}{##6}{##7}{##8}{##9}
        }
        {
            \classics_style_map:nnnnnnn{#3}{##4}{##5}{##6}{##7}{##8}{##9}
        }

        %Starred:
        \IfBooleanT {##1} {\tl_use:c {g_classics_#3_range_separator_tl}\cs:w #3\cs_end:(##4)}
		
		DEBUG \tl_use:c {l_classics_ext_idx_entry_tl} DEBUG
		
		% Two arguments:
        % https://tex.stackexchange.com/questions/133753/how-do-i-have-to-invoke-expandafter-for-a-macro-with-multiple-arguments
		
		\str_if_empty:NTF \g_classics_ext_index_name_tl
		{
			% Do not use index
		}
		{
			\str_if_eq:onTF {\g_classics_ext_index_name_tl} {NONE}
			{
				% No index name given => use standard \index
				%\expandafter\index\expandafter{\l_classics_ext_idx_entry_tl}
				%NORMALINDEX
			}
			{
				% Index name given => use splitidx
				\edef\tmp{[\g_classics_ext_index_name_tl]{\l_classics_ext_idx_entry_tl}}
				\expandafter\sindex\tmp
				%sindex\tmp
			}
		}
    }
}


% <idx name>
\NewDocumentCommand \UseIndexLocorum {o}
{
	\tl_if_novalue:nTF {#1}
	{
		\tl_set:Nn \g_classics_ext_index_name_tl {NONE}
	}
	{
		\tl_set:Nn \g_classics_ext_index_name_tl {#1}
	}
}


% {<code>}
\NewDocumentCommand \DeclareClassicWorkFormat {m} {\cs_set:Npn \classics_title_format:n ##1 {#1}}


% {<string>}
\cs_new:Npn \classics_title_format:n #1 {\textit{#1}}


% {<basename>} {<string>}
\cs_new:Npn \classics_style_set:nn #1#2
{
	\seq_set_split:cVn {g_classics_#1_style_seq} \g_classics_style_separator_tl {#2}
}


% {<basename>} {<value>}
\cs_new:Npn \classics_style_map:nnnnnnn #1#2#3#4#5#6#7
{
    \seq_set_split:Nnn \l_tmpa_seq {} {{#2} {#3} {#4} {#5} {#6} {#7}}

    \cs_generate_variant:Nn \seq_mapthread_function:NNN {cNN}
    \seq_mapthread_function:cNN {g_classics_#1_style_seq} \l_tmpa_seq  \classics_style_apply:nn
}


% {<style>} {<value>}
\cs_new:Npn \classics_style_apply:nn #1#2
{
	\tl_if_blank:nTF {#2}
	{}
	{
		\cs_set:Npn \__classics_style_apply:n ##1 {#1}
		\__classics_style_apply:n {#2}
	}
}


% {<code>}
\cs_new:Npn \__classics_style_apply:n #1 {}

% ********************************** Misc *************************************

\NewDocumentCommand \classicsalph  {m} {\int_to_alph:n {#1}}
\NewDocumentCommand \classicsAlph  {m} {\int_to_Alph:n {#1}}
\NewDocumentCommand \classicsroman {m} {\int_to_roman:n{#1}}
\NewDocumentCommand \classicsRoman {m} {\int_to_Roman:n{#1}}

% ------------------------------ Plural prefix --------------------------------

% {<command>} {<singular>} {<plural>} {<and>}
\NewDocumentCommand \newpagination {mmmm}
{
	% \exp_after:wN \NewDocumentCommand \cs:w #1\cs_end: {m}
	\NewDocumentCommand #1 {m}
	{
		\classics_plural_prefix:nnnn {#2} {#3} {#4} {##1}
		{~##1}
	}
}

% {<singular>} {<plural>} {<and>} {<string>}
\cs_new:Npn \classics_plural_prefix:nnnn #1#2#3#4
{
	\bool_set_false:N \g__classics_plural_prefix_bool

	\tl_if_in:nnT {#4} {#3} {\bool_set_true:N \g__classics_plural_prefix_bool}
	\tl_if_in:nnT {#4} {-}  {\bool_set_true:N \g__classics_plural_prefix_bool}
	\tl_if_in:nnT {#4} {,}  {\bool_set_true:N \g__classics_plural_prefix_bool}

	\bool_if:nTF \g__classics_plural_prefix_bool {#2} {#1}
}

\endinput
